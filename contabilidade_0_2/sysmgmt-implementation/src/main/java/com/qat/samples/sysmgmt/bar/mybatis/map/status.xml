<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="StatusMap">
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

  <!-- Result maps describe the mapping between the columns returned
      from a query, and the class properties.  A result map isnt
      necessary if the columns (or aliases) match to the properties
       exactly. -->
  <resultMap id="StatusResult" type="Status">
    <result property="id" column="Integer"/>
    <result property="dataStatus" column="Long"/>
    <result property="parentId" column="Integer"/>
    <result property="statusValue" column="Integer"/>
    <result property="acaoEnumValue" column="Integer"/>
    <result property="tabelaEnumValue" column="Integer"/>
    <result property="note" column="String"/>
  </resultMap>

  <sql id="allStatusColumns">
create_date
,create_user
,modify_date
,modify_user
,id
,dataStatus
,parentId
,statusValue
,acaoEnumValue
,tabelaEnumValue
,note

</sql>
<sql id="allStatusValues">
#{id},
#{dataStatus},
#{parentId},
#{statusValue},
#{acaoEnumValue},
#{tabelaEnumValue},
#{note},
		#{createDateUTC},
		#{createUser},
		#{modifyDateUTC},
		#{modifyUser}
  </sql>

 <sql id="allStatusColumnsWithQualifier">
		c.id, c.status_desc
c.id,
c.dataStatus,
c.parentId,
c.statusValue,
c.acaoEnumValue,
c.tabelaEnumValue,
c.note,
		c.createDateUTC,
		c.createUser,
		c.modifyDateUTC,
		c.modifyUser
 </sql>

 <select id="fetchAllStatus" resultMap="StatusResult">
    SELECT
	<include refid="allStatusColumns" />
   FROM status ORDER BY id ASC
 </select>

 <select id="fetchStatusById" parameterType="Integer" resultMap="StatusResult">
    SELECT
	<include refid="allStatusColumns" />
   FROM status WHERE id = #{fetchid}
 </select>

 <select id="fetchAllStatusRequest" parameterType="PagedInquiryRequest" resultMap="StatusResult">
		SELECT <include refid="allStatusColumns" />
  		  FROM status ORDER BY id ASC
		  OFFSET ( #{startPage} * #{pageSize} )
		  LIMIT #{pageSize}

</select>

<select id="fetchStatusRowCount" resultType="Integer">
		SELECT COUNT(*) AS RECORD_COUNT FROM status WHERE id IS NOT NULL

 </select>

 <insert id="insertStatus" parameterType="Status">
 	INSERT INTO status (
	<include refid="allStatusColumns" />
     )
   VALUES (<include refid="allStatusValues" /> )
 </insert>

 <update id="updateStatus" parameterType="Status">
   UPDATE status SET
		<if test="id!= null">id = #{id},</if>
		<if test="dataStatus!= null">dataStatus = #{dataStatus},</if>
		<if test="parentId!= null">parentId = #{parentId},</if>
		<if test="statusValue!= null">statusValue = #{statusValue},</if>
		<if test="acaoEnumValue!= null">acaoEnumValue = #{acaoEnumValue},</if>
		<if test="tabelaEnumValue!= null">tabelaEnumValue = #{tabelaEnumValue},</if>
		<if test="note!= null">note = #{note},</if>
		<if test="modifyDateUTC!= null"> modify_date=#{modifyDateUTC},</if>
		<if test="modifyUser!= null"> modify_user=#{modifyUser}</if>
   WHERE
    id = #{id}
 </update>

<delete id="deleteStatusById" parameterType="Status">
  DELETE FROM status WHERE id = #{id}
 </delete>

 <delete id="deleteAllStatus">
	DELETE FROM status
  </delete>
</mapper>


