<?xml version="1.0" encoding="UTF-8" ?>
<!-- create by system gera-java version 1.0.0 29/04/2016 12:49 : 21-->
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="EmailMap">
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

  <!-- Result maps describe the mapping between the columns returned
      from a query, and the class properties.  A result map isnt
      necessary if the columns (or aliases) match to the properties
       exactly. -->
  <resultMap id="EmailResult" type="Email">
    <result property="id" column="id"/>
    <result property="tabelaEnumValue" column="tabelaEnumValue"/>
    <result property="parentId" column="parentId"/>
    <result property="typeValue" column="typeValue"/>
    <result property="email" column="email"/>
    <result property="emailTypeEnumValue" column="emailTypeEnumValue"/>
<result property="createUser" column="create_user"/>
<result property="createDateUTC" column="create_date"/>
<result property="modifyUser" column="modify_user"/>
<result property="modifyDateUTC" column="modify_date"/>
  </resultMap>

  <sql id="allEmailColumns">
tabelaEnumValue
,parentId
,typeValue
,email
,emailTypeEnumValue
,create_date
,create_user
,modify_date
,modify_user

</sql>
<sql id="allEmailValues">
#{tabelaEnumValue},
#{parentId},
#{typeValue},
#{email},
#{emailTypeEnumValue},
#{createDateUTC},
#{createUser},
#{modifyDateUTC},
#{modifyUser}
  </sql>



 <select id="fetchAllEmails" resultMap="EmailResult">
    SELECT id,
	<include refid="allEmailColumns" />
   FROM email ORDER BY id ASC
 </select>

 <select id="fetchEmailById" parameterType="Integer" resultMap="EmailResult">
    SELECT id,
	<include refid="allEmailColumns" />
   FROM email WHERE id = #{fetchid}
 </select>
 
  <select id="fetchEmailByPessoa" parameterType="Integer" resultMap="EmailResult">
    SELECT id,
	<include refid="allEmailColumns" />
   FROM email WHERE parentId = #{id}  and tabelaEnumValue in (16,17,18,19)
 </select>
 
 

 <select id="fetchAllEmailsRequest" parameterType="PagedInquiryRequest" resultMap="EmailResult">

		SELECT id,<include refid="allEmailColumns" />
  		  FROM email ORDER BY id ASC
		  OFFSET ( #{startPage} * #{pageSize} )
		  LIMIT #{pageSize}
</select>

<select id="fetchEmailRowCount" resultType="Integer">
		SELECT COUNT(*) AS RECORD_COUNT FROM email WHERE id IS NOT NULL

 </select>

 <insert id="insertEmail" parameterType="Email">
 	INSERT INTO email (<if test="id != null">id,</if>
	<include refid="allEmailColumns" />
     )
   VALUES (<if test="id != null">#{id},</if><include refid="allEmailValues" /> )
 </insert>

 <update id="updateEmail" parameterType="Email">
   UPDATE email SET
<if test="tabelaEnumValue!= null">tabelaEnumValue = #{tabelaEnumValue},</if>
<if test="parentId!= null">parentId = #{parentId},</if>
<if test="typeValue!= null">typeValue = #{typeValue},</if>
<if test="email!= null">email = #{email},</if>
<if test="emailTypeEnumValue!= null">emailTypeEnumValue = #{emailTypeEnumValue},</if>
<if test="modifyDateUTC!= null"> modify_date=#{modifyDateUTC},</if>
<if test="modifyUser!= null"> modify_user=#{modifyUser}</if>
   WHERE
    id = #{id}
 </update>

<delete id="deleteEmailById" parameterType="Email">
  DELETE FROM email WHERE id = #{id}
 </delete>

 <delete id="deleteAllEmails">
	DELETE FROM email
  </delete>

  <select id="fetchAllEmailsByEmpresa" parameterType="Integer" resultMap="EmailResult">
    SELECT id,
	<include refid="allEmailColumns" />
   FROM email WHERE parentId = #{fetchid} and tabelaEnumValue in (1,51,52,61,62,63)
 </select>
</mapper>


