<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ServicoMap">

	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>  -->

  	<!--private Integer id;
	/** The type of an account. */
	private String nome;
	private String descricao;
	private List<TabPreco> preco; -->

  <resultMap id="servicoResult" type="Servico">
    <result property="id" column="id" />
    <result property="nome" column="nome" />
	<result property="emprId" column="emprId"/>
	<result property="descricao" column="descricao"/>
	<result property="createUser" column="create_user"/>
	<result property="createDateUTC" column="create_date"/>
	<result property="modifyUser" column="modify_user"/>
	<result property="modifyDateUTC" column="modify_date"/>
	<collection property="preco" column="id" select="PrecoMap.fetchPrecoByProduto" />
  </resultMap>

  <sql id="allServicoColumns">
		 b.nome
		,b.descricao
      	,b.emprId
      	,b.create_date
      	,b.create_user
      	,b.modify_date
      	,b.modify_user

  </sql>

  <sql id="allServicoValues">
  		#{nome},
  		#{descricao},
    	#{emprId},
    	<include refid="CBOFMap.changeControlFields"/>

  </sql>

  <!--
		SQL Insert Statements.
 	-->
  <insert id="insertServico" parameterType="Servico" useGeneratedKeys="true" keyProperty="id">
  	INSERT INTO servico (
		  nome
		,descricao
      	,emprId
      	,create_date
      	,create_user
      	,modify_date
      	,modify_user
      )
    VALUES (<include refid="allServicoValues" /> )
  </insert>



	<!--
		SQL Update Statements.
 	-->

  <update id="updateServico" parameterType="Servico">
    UPDATE servico
    	<set>
    		<if test="nome!= null">nome = #{nome},</if>
	    	<if test="descricao!= null"> descricao=#{descricao},</if>
			<if test="modifyDateUTC!= null"> modify_date=#{modifyDateUTC},</if>
			<if test="modifyUser!= null"> modify_user=#{modifyUser}</if>
		</set>
    WHERE
    id = #{id}
  </update>

   <!--
		SQL Delete Statements.
   -->
  <delete id="deleteServicoById" parameterType="Integer">
    	DELETE FROM servico WHERE id = #{id}
  </delete>

	<!--
		SQL Fetch Statements.
 	-->
  <select id="fetchServicoRowCount" parameterType="PagedInquiryRequest" resultType="Integer">
     SELECT COUNT(id) AS RECORD_COUNT
        FROM servico

  </select>

  <select id="fetchAllServicos" resultMap="servicoResult">
    SELECT
	<include refid="allServicoColumns" />
    FROM servico ORDER BY name ASC
  </select>

  <select id="fetchServicoById" parameterType="Integer" resultMap="servicoResult">
    			   SELECT b.id,
						<include refid="allServicoColumns" />
 				   FROM servico b where

								b.id = #{id}

  </select>

  <select id="fetchAllServicosByRequest" parameterType="PagedInquiryRequest" resultMap="servicoResult">
    SELECT * FROM
    			(
    				SELECT b.id,
    						<include refid="allServicoColumns" />,
    						ROW_NUMBER() OVER(ORDER BY b.codigo) AS RowNumber
    				FROM servico b
					WHERE 2 = 2

    			) LIST
				<choose>
					<when test="pageSize != null and pageSize > 0">
					   <!-- #{startPage}*#{pageSize} = startRow, so limits are:
					        LOWER: startRow + 1 and
					        UPPER: startRow + pageSize -->
					   WHERE RowNumber BETWEEN (#{startPage}*#{pageSize})+ 1 AND (#{startPage}*#{pageSize})+#{pageSize}
					</when>
					<otherwise>
					 	WHERE RowNumber BETWEEN 1 AND RowNumber
					 	ORDER BY RowNumber
					</otherwise>
				</choose>
  </select>


</mapper>